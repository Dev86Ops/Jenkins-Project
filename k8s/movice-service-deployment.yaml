# Movie Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movie-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: movie-service
    spec:
      containers:
      - name: movie-service
        image: movie-service:latest
        command: ["uvicorn"]
        args: ["app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
        ports:
          - containerPort: 8000
            hostPort: 8001
            protocol: TCP
        resources: {}  
        env:
        - name: DATABASE_URI
          value: "postgresql://movie_db_username:movie_db_password@movie_db/movie_db_dev"
        - name: CAST_SERVICE_HOST_URL
          value: "http://cast-service:8000/api/v1/casts/"
        volumeMounts:
        - mountPath: "/app/"
          name: movie-service-volume
      restartPolicy: Always
      volumes:
      - name: movie-service-volume
        persistentVolumeClaim:
          claimName: movie-service-volume
status: {}

---

# Movie Service Service
apiVersion: v1
kind: Service
metadata:
  name: movie-service
spec:
  selector:
    app: movie-service
  ports:
  - protocol: TCP
    port: 8001
    targetPort: 8000
status:
  loadBalancer: {}

---

# Movie Database PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-data-movie
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}